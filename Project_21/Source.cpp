#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>

#include "array_functions.h"
#include "help_functions.h"



using namespace std;

int main()
{
    //setlocale(LC_ALL, "rus");

    // ---------------------------------------------------------------------------------------------------------------- //

    /*
    Написать функцию инициализации одномерного массива случайными
    значениями в передапнном диапозоне.
    */

    /*
    Написать функцию сортировки одномерного массива в
    порядке возрастания.
    */

    srand(time(0));
    //const int N = 10;
    //int arr[N];

    //fill(arr, N, 1, 15);
    //show(arr, N);
    //sort(arr, N);
    //show(arr, N);



    // ------------------------------------------------------------------------------------------------------------------- //

    /*
    Написать функцию инициализации матрицы случайными
    значениями в передапнном диапозоне.
    */

    /*    
    Написать функцию, которая принимает в качестве    
    параметра матрицу, количество строк и    выводит матрицу на экран.    
    */

    //const int ROW = 3;
    //int arr[ROW][COL];
    //int k, count;

    //fill(arr, ROW, -5, 20);
    //show(arr, ROW);
    //
    //k = rand() % (26 - 5);
    //cout << "\nСгенерировано число: " << k << endl;

    //count = find_repeat(arr, ROW, k);

    //if (count)
    //{
    //    cout << "\nКоличество повторений: " << count << endl;
    //}
    //else {
    //    cout << "\nЗначение не найдено";
    //}


    // ------------------------------------------------------------------------------------------------------------------- //

    // Написать функцию сортировки строк методом Выбора для матрицы.

    //const int ROW = 3;
    //int arr[ROW][COL];
    //int k, count;

    //fill(arr, ROW, -5, 20);
    //cout << "\nДо сортировки " << endl << endl;
    //show(arr, ROW);
    //sort(arr, ROW);
    //cout << "\nПосле сортировки " << endl << endl;
    //show(arr, ROW);



    // ------------------------------------------------------------------------------------------------------------------- //

    /*
    Написать функцию для расчета объема параллелипипеда.
    */

    //int a = 2, b = 3, d = 6;

    //cout << "\nОбьем: " << volume(a, b, d);
    //cout << "\nОбьем: " << volume(a, b);
    //cout << "\nОбьем: " << volume(a);
    //cout << "\nОбьем: " << volume();


    // ------------------------------------------------------------------------------------------------------------------- //

    /*
    Функции с параметрами по умолчанию:
        - параметры по умолчанию должны быть правыми крайними
          в списке параметров
        - параметры по умолчанию задаются только в прототипе функции,
          в реализации - нет
    */

    //line('^');


    // ------------------------------------------------------------------------------------------------------------------- //

    /*
    Добавить в уже существующую функцию вывода одномерного массива на экран
    параметр типа bool, определяющий направление вывода данных(в прямом или обратном порядке).
    По умолчанию - в прямом.
    */

    //const int N = 10;
    //int arr[N];

    //// fill(arr, N, -5, 10);
    //fill(arr, N);
    //cout << "\nМассив в прямом порядке: \n";
    //show(arr, N);
    //cout << "\nМассив в обратном порядке: \n";
    //show(arr, N, false);



    // ------------------------------------------------------------------------------------------------------------------- //

    /*
    Добавить в уже существующую функцию сортировки одномерного массива
    параметр типа bool, определяющий критерий сортировки(по возрастанию или по убыванию).
    По умолчанию - по возрастанию.
    */
    
    //const int N = 10;
    //int arr[N];

    //fill(arr, N);
    //show(arr, N);

    //cout << "\nМассив в прямом порядке до сортировки по возврастанию: \n";
    //sort(arr, N);
    //show(arr, N);
    //cout << "\nМассив в прямом порядке после сортировки по убыванию: \n";
    //sort(arr, N, false);
    //show(arr, N);



    
    // ------------------------------------------------------------------------------------------------------------------- //

    //const int N = 10;
    //int arr[N];

    //fill(arr, N);
    //show(arr, N);

    //cout << "\nМаксимум из массива " << maximum(arr, N);


    // ------------------------------------------------------------------------------------------------------------------- //

    /* Написать перегруженные функции для определения и возврата площади :    - прямоугольника    - круга     */

    cout << "\nПлощадь прямоугольника: " << area(5, 4) << endl;
    cout << "\nПлощадь круга: " << area(5) << endl;

    _getch();
}