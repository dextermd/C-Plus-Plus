#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>
#include <string.h>
#include <algorithm>
#include "Data.h"
#include "Student.h"
#include "my_templates.h"

using namespace std;


int main()
{


#if 0

    // ----------------------------------------------------------------------------------------------------- \\

    /*
    Написать функцию, принимает массив студентов, его размер и
    выводит список студентов одного    учебного заведения
    (параметр функции, полное совпадение) .

    Если студентов этого
    учебного заведения нет в массиве - сообщение.

    bool show(Student *m, int size, const char *v);
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    char key[50];
    cout << "\nВведи наименование вуза для поиска: \n";
    cin.getline(key, sizeof(key));

    cout << "\n--------------------------------Студенты вуза" << key << ": \n";
    bool pr = show_vuz(mas, N, key);

    if (!pr)
    {
        cout << "\nВ массиве студенты  этого вуза не найдены!";
    }

#endif



#if 0

    // ----------------------------------------------------------------------------------------------------- \\

    /*
    Написать функцию, принимает массив студентов, его размер и
    выводит список студентов одного    учебного заведения
    (параметр функции, поиск по подстроке) .

    Если студентов этого
    учебного заведения нет в массиве - сообщение.

    bool search_surname(Student *m, int size, const char *surname);
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);


    char key[50];
    cout << "\nВведи часть фамилии для поиска: \n";
    cin.getline(key, sizeof(key));

    cout << "\n--------------------------------Результат поиска " << key << ": \n";
    
    bool res = search_sub_surname(mas, N, key);

    if (!res)
    {
        cout << "\nПо вашему запросу ничего не найдены! \n";
    }
   
#endif


#if 0
    // ----------------------------------------------------------------------------------------------------- \\

    /*
    Написать функцию сортировки массива студентов по фамилии
    в алфавитном порядке
    void sort_by_surname(Student * mas, int size);
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по фамилии в алфавитном порядке: \n";

    sort_by_surname(mas, N);
    show(mas, N);

#endif

#if 0
    // ----------------------------------------------------------------------------------------------------- \\

    /*
    Написать функцию сортировки массива студентов по Среднему баллу
    в порядке убывания.
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по среднему баллу в порядке убывания: \n";
    
    sort_by_media(mas, N);
    show(mas, N);

#endif


#if 0
    // ----------------------------------------------------------------------------------------------------- \\
    
    /*
    Написать одну функцию сортировки массива студентов с 
    указателем на функцию
    для критерия сравнения двух студентов.


    Осуществить сортировку по:
    - по году рождения в порядке возврастания
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по году в порядке возврастания: \n";

    sort(mas, N, cpm_by_year_decr);
    show(mas, N);

#endif


#if 0
    // ----------------------------------------------------------------------------------------------------- \\
    
    /*
    Написать одну функцию сортировки массива студентов с 
    указателем на функцию
    для критерия сравнения двух студентов.

    Осуществить сортировку по:
    - по году рождения в порядке убывания
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по году в порядке убывания: \n";

    sort(mas, N, cpm_by_year_incr);
    show(mas, N);

#endif


#if 0
    // ----------------------------------------------------------------------------------------------------- \\
    
    /*
    Написать одну функцию сортировки массива студентов с 
    указателем на функцию
    для критерия сравнения двух студентов.

 

    Осуществить сортировку по:
    - по году рождения
    - среднему баллу в порядке возрастания
    + среднему баллу в порядке убывания
    - по фамилии в алфавитном порядке
    - по возрасту в порядке возрастания/убывания
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по году в порядке убывания: \n";

    sort(mas, N, cpm_by_media_incr);
    show(mas, N);

#endif


#if 0
    // ----------------------------------------------------------------------------------------------------- \\
    
    /*
    Написать одну функцию сортировки массива студентов с 
    указателем на функцию
    для критерия сравнения двух студентов.

 

    Осуществить сортировку по:
    - по году рождения
    + среднему баллу в порядке возрастания
    - среднему баллу в порядке убывания
    - по фамилии в алфавитном порядке
    - по возрасту в порядке возрастания/убывания
    */

    Student s1{ "Ivanovcenco", "Ivan", "UTM", 10,9,6,7,8, 15,2,2001 };

    const int N = 5;

    Student mas[N]{
        {"Borisov", "Boris", "STEP", 9,10,8,9,10, 25,1,2002},
        s1,
        {"Anisimova", "Kate", "UTM", 9,10,8,9,10, 2,3,2000},
        {"Dmitrov", "Dima", "UTM", 9,10,8,10,10, 22,8,2001},
        {"Bornikov", "Timur", "Univer", 7,10,8,10,10, 22,8,2002},
    };

    cout << "\nМассив студентов: \n";
    show(mas, N);

    cout << "\n---------------------Массив студентов после сортировки по году в порядке возрастания: \n";

    sort(mas, N, cpm_by_media_decr);
    show(mas, N);

#endif





    _getch();
}
