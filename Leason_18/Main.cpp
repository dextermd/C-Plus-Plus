#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>

using namespace std;

void main()
{
    //setlocale(LC_ALL, "rus");

    // ----------------------------------------------------------------------------------------------- \\
    // Двумерные массивы *****************************************************************************
    // ----------------------------------------------------------------------------------------------- \\
    // Подсчитать сумму всех элементов матрицы и вывести результат на экран.

    //int summa = 0;
    //const int ROW = 3, COL = 5;
    //int stud[ROW][COL]{
    //    {10,6,9,8,7},
    //    {9,7,8,5,9},
    //    {2,9,10,9,7}
    //};

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        cout << setw(4) << stud[i][j];
    //        summa += stud[i][j];
    //    }
    //    cout << endl;
    //}

    //cout << "\nСумма всех значений матрицы: " << summa << endl;
    //cout << "\nОбьем памяти в байтах: " << sizeof(stud) << endl;
    //cout << "\nОбьем памяти в байтах: " << sizeof(int) * ROW * COL << endl;


    // ----------------------------------------------------------------------------------------------- \\


    /*
    Объявить и проинициализировать матрицу размером 4 строки
    6 колонок случайными числами в диапазоне от -15 до 25 и
    вывести на экран. Посчитать сумму всех знечений матрицы,
    вывести на экран.
    */


    //int summa = 0;
    //const int ROW = 4, COL = 6;
    //int arr[ROW][COL];

    //srand(time(0));

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        int r = rand() % (25 - -15 + 1) + -15;
    //        arr[i][j] = r;
    //        summa += arr[i][j];
    //        cout << setw(5) << arr[i][j] << " ";
    //    }
    //    cout << endl;
    //}

    //cout << "\nАдрес первого элемента матрицы " << arr << endl;
    //cout << "\nАдрес первого элемента матрицы " << arr[0] << endl;
    //cout << "\nАдрес первой строки матрицы " << &arr[0][0] << endl; // & операция взятия адреса
    //cout << "\nСумма всех значений матрицы: " << summa << endl;

    
    // ----------------------------------------------------------------------------------------------- \\

    /*
        Объявить и проинициализировать матрицу размером 4 строки
        7 колонок случайными числами в диапазоне от -10 до 10.
        Вывести на экран Индекчы положительных значений матрицы

        Справа от строки вывести индексы последнего положительного значения
    */



    //int even;
    //const int ROW = 4, COL = 7;
    //int arr[ROW][COL];
    //int index_pos;
    //srand(time(0));

    //for (int i = 0; i < ROW; i++)
    //{
    //    index_pos = -1; // Пусть в строке нет полож. значений

    //    for (int j = 0; j < COL; j++)
    //    {
    //        int r = rand() % (10 - -10 + 1) + -10;
    //        arr[i][j] = r;

    //        if (arr[i][j] > 0)
    //        {
    //            index_pos = j;
    //        }
    //        
    //        cout << setw(5) << arr[i][j] << " ";
    //    }
    //    if (index_pos != -1)
    //    {
    //        cout << "    Индексы крайнего полож. значения: " << i << "," << index_pos << endl;
    //    }
    //    else {
    //        cout << "    в строке нет полож. значений: ";
    //    }

    //    cout << endl;
    //}

    //cout << "\nИндексы положительных значений матрицы: " << endl;

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int k = 0; k < COL; k++)
    //    {
    //        if (arr[i][k] > 0)
    //        { 
    //            cout << i << "," << k << " ";
    //        }
    //    }
    //}



    // ----------------------------------------------------------------------------------------------- \\

    /*     Дан двумерный массив размерностью 4×6.
    Заполняется случайными числами в диапазоне от -15 до 25.    
    
    - Определить сумму элементов каждой строки и вывести справа строки.     
    - Определить сумму элементов каждого столбика и вывести ниже матрицы.     
    
    Оформить следующим образом:
    -15      2      5    -1      7     6     сумма = 4
     24    -13     10    13     -9     4     сумма = 29
     19      2     22    25    -13    -4     сумма = 51
     15      9    -14    -7     -8    15     сумма = 10
    ---------сумма по колонкам-------------
     43      0     23    30    -23    21

     - Сохранить сумму каждой строки матрицы в массиве

    */


    //const int ROW = 4, COL = 6;
    //int arr[ROW][COL], mas_summa_row[ROW], mas_summa_col[COL];
    //int summa_row, summa = 0, summa_col;

    //srand(time(0));

    //for (int i = 0; i < ROW; i++)
    //{
    //    summa_row = 0;

    //    for (int j = 0; j < COL; j++)
    //    {
    //        int r = rand() % (25 - -15 + 1) + -15;
    //        arr[i][j] = r;
    //        summa_row += arr[i][j]; 
    //        //summa += arr[i][j]; // Сумма всех значений - Вариант 1

    //        cout << setw(5) << arr[i][j] << " ";
    //    }
    //    cout << "   сумма строки = " << summa_row << endl;
    //    mas_summa_row[i] = summa_row;
    //    summa += summa_row; // Сумма всех значений - Вариант 2
    //}

    //cout << " ------------ сумма по колонкам ------------- \n";

    //for (int i = 0; i < COL; i++)
    //{
    //    summa_col = 0;

    //    for (int j = 0; j < ROW; j++)
    //    {
    //        summa_col += arr[j][i];
    //    }
    //    mas_summa_col[i] = summa_col;
    //    cout << setw(5) << summa_col << " ";
    //}

    //cout << "\nСумма строк матрицы из массива: ";

    //for (int i = 0; i < ROW; i++)
    //{
    //    cout << mas_summa_row[i] << " ";
    //}

    //cout << "\nСумма колонок матрицы из массива: ";

    //for (int i = 0; i < COL; i++)
    //{
    //    cout << mas_summa_col[i] << " ";
    //}

    //cout << "\nСумма всех значений матрицы: " << summa << endl;




    // ----------------------------------------------------------------------------------------------- \\

    /*
    Дан двумерный массив размерностью 4×6.
    Заполняется случайными числами в диапазоне от -15 до 25.     - Определить максимальный элемент каждой строки и вывести справа строки.
    - Определить максимальный элемент каждого столбика и вывести ниже матрицы.     Оформить следующим образом:
    -15      2      5    -1      7     6     max = 7
     24    -13     10    13     -9     4     max = 24
     19      2     22    25    -13    -4     max = 25
     15      9    -14    -7     -8    15     max = 15     
     ---------максимум  по колонкам---------
    24     9     22    25     7     15     - Записать максимальные значения матрицы по строкам и столбцам
    в отдельные одномерные массивы.     
    */


    const int ROW = 4, COL = 6;
    int arr[ROW][COL], arr_max_row[ROW], arr_max_col[COL];
    int max_row, max_col, max = 0;

    srand(time(0));

    for (int i = 0; i < ROW; i++)
    {
        for (int j = 0; j < COL; j++)
        {
            int r = rand() % (25 - -15 + 1) + -15;
            arr[i][j] = r;
        }
    }

    max = arr[0][0];
    for (int i = 0; i < ROW; i++)
    {
        max_row = arr[i][0];
        for (int j = 0; j < COL; j++)
        {
            cout << setw(6) << arr[i][j];

            if (arr[i][j] > max_row)
            {
                max_row = arr[i][j];
            }

            if (max < arr[i][j])
            {
                max = arr[i][j];
            }
        }
        arr_max_row[i] = max_row;
        cout << " max row = " << max_row << endl;
    }

    cout << " ------------ максимум по колонкам ------------- \n";

    for (int i = 0; i < COL; i++)
    {
        max_col = arr[0][i];

        for (int j = 0; j < ROW; j++)
        {
            if (arr[j][i] > max_col)
            {
                max_col = arr[j][i];
            }
        }
        
        cout << setw(6) << max_col;
        arr_max_col[i] = max_col;
    }

    cout << "\nМаксимальное значение матрицы: " << max;


    cout << "\nМаксимальное строк матрицы из массива: ";
    
    for (int i = 0; i < ROW; i++)
    {
        cout << arr_max_row[i] << " ";
    }

    cout << "\nМаксимальное колонок матрицы из массива: ";

    for (int i = 0; i < COL; i++)
    {
        cout << arr_max_col[i] << " ";
    }




    _getch();

}