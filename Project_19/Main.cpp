#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>

using namespace std;

void main()
{
    //setlocale(LC_ALL, "rus");

    /*
    Дан двумерный массив размерностью 4 × 6.
    Заполняется случайными числами.
    Отсортировать каждую строку матрицы в порядке возрастания.     
    Метод сортировки - Пузырек.
    */

    //const int ROW = 4, COL = 6;
    //int mas[ROW][COL], t;
    //bool p; // был обмен или нет 

    //srand(time(0));

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        mas[i][j] = rand() % 21 - 10;
    //        cout << setw(6) << mas[i][j];
    //    }
    //    cout << endl;
    //}

    //// sort

    //for (int i = 0; i < ROW; i++) // проход по всем строкам
    //{
    //    for (int j = 0; j < COL; j++) // проходы по i-oй cтроке
    //    {
    //        p = false; // Пусть обменов

    //        for (int k = 0; k < COL - 1 - j; k++) // сравнение текущего и соседнего элемента (c оптимизацией COL - 1 - j) (без оптимизации COL - 1)
    //        {
    //            //if (mas[i][k] < mas[i][k + 1]) // по убыванию
    //            if (mas[i][k] > mas[i][k + 1]) // по возрастанию
    //            {
    //                t = mas[i][k];
    //                mas[i][k] = mas[i][k + 1];
    //                mas[i][k + 1] = t;
    //                p = true; // обмен был
    //            }
    //        }
    //        // Оптимизация
    //        if (!p) break;
    //    }
    //}

    //cout << "\nМатрица после сортировки по строкам: " << endl << endl;

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        cout << setw(6) << mas[i][j];
    //    }
    //    cout << endl;
    //}



    // ------------------------------------------------------------------------------------------------------------------- //



    /*
    Дан двумерный массив размерностью 4 × 6.
    Заполняется случайными числами.
    Отсортировать каждую столбец матрицы в порядке возрастания.    
    Метод сортировки - Пузырек.
    */


    //const int ROW = 4, COL = 6;
    //int mas[ROW][COL], t;
    //bool p; // был обмен или нет 

    //srand(time(0));

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        mas[i][j] = rand() % 21 - 10;
    //        cout << setw(6) << mas[i][j];
    //    }
    //    cout << endl;
    //}

    //// sort

    //for (int i = 0; i < COL; i++) // проход по всем колонкам
    //{
    //    for (int j = 0; j < ROW; j++) // проходы по i-oй колонке
    //    {
    //        p = false;

    //        for (int k = 0; k < ROW - 1 - j; k++) // сравнение текущего и соседнего элемента (c оптимизацией ROW - 1 - j) (без оптимизации ROW - 1)
    //        {
    //            //if (mas[k][i] < mas[k + 1][i]) // по убыванию
    //            if (mas[k][i] > mas[k + 1][i]) // по возрастанию
    //            {
    //                t = mas[k][i];
    //                mas[k][i] = mas[k + 1][i];
    //                mas[k + 1][i] = t;
    //                p = true; // обмен был
    //            }
    //        }
    //        // Оптимизация
    //        if (!p) break;
    //    }
    //}

    //cout << "\nМатрица после сортировки по строкам: " << endl << endl;

    //for (int i = 0; i < ROW; i++)
    //{
    //    for (int j = 0; j < COL; j++)
    //    {
    //        cout << setw(6) << mas[i][j];
    //    }
    //    cout << endl;
    //}



    // ------------------------------------------------------------------------------------------------------------------- //
    // ------------------------------------------------- Функции --------------------------------------------------------- //
    // ------------------------------------------------------------------------------------------------------------------- //


    _getch();

}