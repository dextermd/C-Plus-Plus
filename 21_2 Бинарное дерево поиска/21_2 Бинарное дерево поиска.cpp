//#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <iomanip>

#include "MyTree.h"
 
int main()
{
	system("chcp 1251>nul");
	system("color 1F");

	//----------------------------------------------------------------------
	// Добавление значения в дерево и отображение всего дерева

	MyTree t;
	t.Show();
	t.Add(25);
	t.Add(15);
	t.Add(17);
	t.Add(19);
	t.Add(50);

	t.Show();
	cout << endl;
	

	//----------------------------------------------------------------------
	// Поиск значения в дереве

	if (t.search(19))
	{
		cout << "\nЗначение найдено";
	}
	else {
		cout << "\nЗначение не найдено";
	}


	_getch();
	return 0;
}


//======================================================================
	//----------------------------------------------------------------------

	/*
	Бинарное дерево (binary tree) — это упорядоченная древовидная
	динамическая структура. Каждый элемент (узел) дерева
	имеет не более двух элементов следующих за ним (потомков)
	и не более одного предыдущего (родителя).
	*/

	/*
	Бинарное (двоичное) дерево поиска – это бинарное дерево,
	для которого выполняются следующие дополнительные условия
	(свойства дерева поиска):

	- оба поддерева – левое и правое, являются двоичными деревьями поиска;
	- у всех узлов левого поддерева произвольного узла X
	значения ключей данных меньше,
	чем значение ключа данных самого узла X;
	- у всех узлов правого поддерева произвольного узла X
	значения ключей данных не меньше, чем значение ключа данных узла X.

	Данные в каждом узле должны обладать ключами,
	для которых определена операция сравнения меньше.
	*/