#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>
#include "help_functions.h"
#include "array_functions.h"


using namespace std;

int main()
{
    //setlocale(LC_ALL, "rus");

    /*
    Написать функцию, которая определяет, является ли число четным.
    (возвращает правду в случае четного числа и ложь - в противном случае)
    */

    //int a = 26;

    //if (is_number_even(a))
    //{
    //    cout << "\nЧисло четное";
    //}
    //else {
    //    cout << "\nЧисло не четное";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Функция принимает три целых числа и определяет,
    являются ли они тройкой Пифагора (а * а + в * в = с * с).

    3 4 5
    (9 + 16 = 25)

    */
    
    //if (is_pythagoras(3,6,5))
    //{
    //    cout << "\nТройка пифигора";
    //}
    //else {
    //    cout << "\nНе Тройка пифигора";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Используя написанную функцию,
    вывести на экран все тройки Пифагора для чисел в диапазоне
    от 1 до 50.
    Откорректировать программу, выводя только первые 10 троек Пифагора.
    */

    //int k = 0;

    //for (int a = 1; a < 50; a++)
    //{
    //    for (int b = 1; b < 50; b++)
    //    {
    //        for (int c = 1; c < 50; c++)
    //        {

    //            if (is_pythagoras(a,b,c))
    //            {
    //                k++;
    //                cout << k <<"). " << a << " " << b << " " << c << endl;
    //                
    //            }
    //        }
    //        if (k == 10) break;
    //    }
    //}



    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, которая принимает два целых числа и
    определяет, больше ли первое число второго.
    */

    //int n, k;
    //cout << "\nВведите два целых числа: ";
    //cin >> n >> k;

    //if (is_greater(n,k))
    //{
    //    cout << "\nПервое число больше второго";
    //}
    //else {
    //    cout << "\nПервое число не больше второго второго";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
  
    Написать функцию, которая принимает число и определеяет,
    является ли оно палиндромом.

    В коде функции использвать уже имеющиеся функции для определения количества цифр в числе
    и возврата цифры по позиции.

    */

    
    //int a = 5621265;

    //cout << is_number_palindrom(a);

    //if (is_number_palindrom(a))
    //{
    //    cout << "\nЧисло является палиндромом";
    //}
    //else {
    //    cout << "\nЧисло не является палиндромом";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, которая принимает одномерный массив,
    его размер и выводит массив на экран.
    */

    //const int N = 10;
    //int arr[N]{ 5,-25,36,954,12,-6,5,3,0,12 };
    //
    //show(arr, N);



    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, определяющую и возвращающую
    среднее арифметическое     элементов
    передаваемого ей целочисленного одномерного массива.
    Параметры: массив и его размер(количество элементов)
    */

    //const int N = 10;
    //int arr[N]{ 5,-25,36,954,12,-6,5,3,0,12 };
    //
    //cout << "\nСреднее значение массива: " << media_array(arr, N);



    // ------------------------------------------------------------------------------------------------------------------------------- // 
    
    /*
    Написать функцию, которая принимает массив, его размер
    и число. Определяет, присутствует ли это число в массиве.
    Метод Линейного поиска.

    Возвращает(варианты):
        + правда / лож
        - количество повторений числа в массиве
        - индекс первого вхождения числа в массива
    */

    //const int N = 10;
    //int arr[N]{ 5,-25,36,954,12,-6,5,3,0,12 };
    //int num;
    //cout << "\n Введите целое число для поиска в массиве: ";
    //cin >> num;

    //if (find_number(arr, N, num))
    //{
    //    cout << "\nЗначение есть в массиве" ;
    //}
    //else {
    //    cout << "\nЗначения нет в массиве";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, которая принимает массив, его размер
    и число. Определяет, присутствует ли это число в массиве.
    Метод Линейного поиска.

    Возвращает(варианты):
        - правда / лож
        + количество повторений числа в массиве
        - индекс первого вхождения числа в массива
    */

    //const int N = 10;
    //int arr[N]{ 5,-25,36,954,12,-6,5,3,0,12 };
    //int num, res;
    
    //cout << "\nВведите целое число для поиска в массиве: ";
    //cin >> num;

    //res = find_count_number(arr, N, num);
    //if (res)
    //{
    //    cout << "\nЗначение есть в массиве, повторяется " << res << " раз.";
    //}
    //else {
    //    cout << "\nЗначения нет в массиве";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, которая принимает массив, его размер
    и число. Определяет, присутствует ли это число в массиве.
    Возвращает индекс первого вхождения, если присудствует,
    в противном случае возвращает -1/

    Метод Линейного поиска.

    Возвращает(варианты):
        - правда / лож
        - количество повторений числа в массиве
        + индекс первого вхождения числа в массива
    */

    //const int N = 10;
    //int arr[N]{ 5,-25,36,954,12,-6,5,3,0,12 };
    //int num, index;

    //cout << "\nВведите целое число для поиска в массиве: ";
    //cin >> num;

    //index = find_index_number(arr, N, num);

    //if (index != -1)
    //{
    //    cout << "\nЗначение есть в массиве, индекс первого вхождения " << index << endl;
    //}
    //else {
    //    cout << "\nЗначения нет в массиве";
    //}


    // ------------------------------------------------------------------------------------------------------------------------------- // 

    /*
    Написать функцию, которая принимает одномерный массив,
    его размер    и определяет, является ли массив палиндромом.
    */
    
    //const int M = 6;
    //int tmp[M]{ 125,-63,4,4,-63,125 };

    //if (is_array_palindrom(tmp, M))
    //{
    //    cout << "\nМассив - палиндром";
    //}
    //else {
    //    cout << "\nМассив - не палиндром";
    //}



    _getch();
}